name: CI/CD React to Docker Hub & VPS

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: todolist-fe

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set short SHA
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image (latest + commit tag)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}

      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            IMAGE="${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}"
            VERSION=${{ env.SHORT_SHA }}
            
            echo "Stopping existing container..."
            docker stop $IMAGE || true
            docker rm $IMAGE || true

            echo "Pulling latest image version: $IMAGE:$VERSION"
            docker pull $IMAGE:$VERSION

            echo "Running new container..."
            docker run -d --name $IMAGE -p 3000:80 $IMAGE:$VERSION

            echo "Saving deployed version..."
            echo "$VERSION" > /home/${USER}/.deployed-${IMAGE}
